
name: Test

on:
  push:
    # branches:
    #   - 'master'
    tags:
      - 'v*'
  # pull_request:
  #   branches:
  #     - 'master'
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag for the Docker image (semver)"
        required: true

env:
  VERSION: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || github.ref_name }}

jobs:
  # Build-All-Java-Package
  Build-All-Java-Package:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - service: 'gateway'
            jarName: 'Towelove-Gateway'
          - service: 'auth'
            jarName: 'Towelove-Auth'
          - service: 'user'
            jarName: 'Towelove-User'
          - service: 'loves'
            jarName: 'Towelove-Loves'
          - service: 'msg'
            jarName: 'Towelove-Msg'
          - service: 'server-center'
            jarName: 'Towelove-Server-Center'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4  
    - name: Set up JDK 17 
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests -P pro
    - name: Copy Artifacts
      run: |
        mkdir staging && cp Towelove-*/target/*.jar staging
        ls -al staging
    - name: Set up Docker Meta
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: |
          towelove/towelove-${{ matrix.service }}
        tags: |
          type=semver,pattern={{version}}${{ github.event_name == 'workflow_dispatch' && format(',value={0}', github.event.inputs.version) || '' }}
          type=semver,pattern={{major}}.{{minor}}${{ github.event_name == 'workflow_dispatch' && format(',value={0}', github.event.inputs.version) || '' }}
    - name: Build and push Docker image
      uses: ./.github/actions/build-and-push-docker
      with:
        dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
        dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
        context: .
        file: ./Docker-Build/Dockerfile
        build-args: SERVICE_NAME=${{ matrix.jarName }}
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: SSH Deploy
      uses: ./.github/actions/ssh-deploy
      with:
        ssh_host: ${{ secrets.SSH_HOST }}
        ssh_user: ${{ secrets.SSH_USER }}
        ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
        deploy_script: '/opt/ops/deploy.sh'
        service_name: ${{ matrix.jarName }}
        service_version: ${{ steps.meta.outputs.version }}
