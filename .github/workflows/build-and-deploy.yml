
name: Build And Deploy to Docker Hub

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  # pull_request:
  #   branches:
  #     - 'master'
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag for the Docker image (semver)"
        required: true

env:
  UNIQUE_TAG: ${{ github.sha }}

jobs:
  # Build-All-Java-Package
  Build-And-Deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - service: 'gateway'
            fullName: 'Towelove-Gateway'
          - service: 'auth'
            fullName: 'Towelove-Auth'
          - service: 'user'
            fullName: 'Towelove-User'
          - service: 'loves'
            fullName: 'Towelove-Loves'
          - service: 'msg'
            fullName: 'Towelove-Msg'
          - service: 'server-center'
            fullName: 'Towelove-Server-Center'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4  
    - name: Generate short SHA
      id: shortsha
      run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c 1-7)" >> $GITHUB_OUTPUT
    - name: Set up JDK 17 
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        #server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Create Maven settings.xml with Repositories
      run: |
        cat <<EOF > ${{ github.workspace }}/settings.xml
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
          <localRepository/>
          <interactiveMode/>
          <usePluginRegistry/>
          <offline/>
          <pluginGroups/>
          <servers/>
          <mirrors/>
          <proxies/>
          <profiles>
            <profile>
              <id>extra-repos</id>
              <repositories>
                <!-- Google's Maven repository -->
                <repository>
                  <id>google</id>
                  <url>https://maven.google.com/</url>
                  <releases><enabled>true</enabled></releases>
                  <snapshots><enabled>true</enabled></snapshots>
                </repository>
              </repositories>
            </profile>
          </profiles>
          <activeProfiles>
            <activeProfile>extra-repos</activeProfile>
          </activeProfiles>
        </settings>
        EOF
    - name: Build with Maven
      run: mvn clean  -B package --file pom.xml -DskipTests -P pro --settings ./settings.xml -pl ${{ matrix.fullName }} -am
    - name: Copy Artifacts
      run: |
        mkdir staging && cp Towelove-*/target/*.jar staging
        ls -al staging
    - name: Set up Docker Meta
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: |
          ghcr.io/towelove/towelove-${{ matrix.service }}
        tags: |
          type=raw,value=0.1.0-${{ steps.shortsha.outputs.SHORT_SHA }}
          type=semver,pattern={{version}}${{ github.event_name == 'workflow_dispatch' && format(',value={0}', github.event.inputs.version) || '' }}
          type=semver,pattern={{major}}.{{minor}}${{ github.event_name == 'workflow_dispatch' && format(',value={0}', github.event.inputs.version) || '' }}
          type=raw,value=latest
# TODO 更新tag规则          
#type=ref,event=branch
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.0.0
    - name: Log in to ghcr.io
      uses: docker/login-action@v3.0.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }} # nothing to do
    - name: Build and Push Images
      uses: docker/build-push-action@v5.1.0
      with:
        context: .
        file: ./Docker-Build/Dockerfile
        tags: ${{ steps.meta.outputs.tags }}
        build-args: |
          SERVICE_NAME=${{ matrix.fullName }}
        push: true
        platforms: linux/amd64
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: SSH Deploy
      uses: falling42/ssh-deploy@v0.2.1
      with:
        jump_ssh_host: ${{ secrets.JUMP_SSH_HOST }}
        jump_ssh_user: ${{ secrets.JUMP_SSH_USER }}
        jump_ssh_private_key: ${{ secrets.JUMP_SSH_PRIVATE_KEY }}
        ssh_host: ${{ secrets.SSH_HOST }}
        ssh_user: ${{ secrets.SSH_USER }}
        ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
        use_screen: 'yes'
        use_jump_host: 'yes'
        execute_remote_script: 'yes'
        transfer_files: 'no'
        copy_script: 'yes'
        source_script: './Docker-Build/scripts/deploy.sh'
        deploy_script: '/opt/ops/deploy.sh'
        service_name: ${{ matrix.fullName }}
        service_version: ${{ steps.meta.outputs.version }}